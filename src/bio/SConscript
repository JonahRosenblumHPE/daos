"""Build blob I/O"""

FILES = ['bio_buffer.c', 'bio_bulk.c', 'bio_config.c', 'bio_context.c', 'bio_device.c',
         'bio_monitor.c', 'bio_recovery.c', 'bio_xstream.c', 'bio_wal.c', 'smd.pb-c.c']


def scons():
    """Execute build"""
    Import('env', 'prereqs', 'control_tgts')

    env.AppendUnique(LIBPATH=[Dir('.')])
    env.AppendUnique(LIBPATH=[Dir('smd')])

    if not prereqs.server_requested():
        return

    denv = env.Clone()
    denv.AppendUnique(LINKFLAGS=["-Wl,--no-as-needed"])
    denv.Append(CPPDEFINES=['-DDAOS_PMEM_BUILD'])
    denv.require('pmdk', 'spdk', 'argobots', 'protobufc', 'isal')

    SConscript('smd/SConscript')
    denv.AppendUnique(OBJPREFIX='b_')

    # SPDK related libs
    libs = ['daos_common_pmem', 'gurt', 'spdk_bdev', 'spdk_bdev_aio', 'spdk_bdev_nvme', 'spdk_blob',
            'spdk_nvme', 'spdk_sock', 'spdk_log', 'spdk_notify', 'spdk_blob_bdev', 'spdk_vmd',
            'spdk_event_bdev', 'spdk_init', 'numa', 'dl', 'smd', 'abt', 'spdk_accel', 'spdk_thread',
            'spdk_util', 'spdk_json', 'spdk_jsonrpc', 'spdk_rpc', 'spdk_dma', 'spdk_keyring',
            'spdk_trace', 'spdk_env_dpdk', 'rte_mempool', 'rte_mempool_ring', 'rte_bus_pci',
            'rte_pci', 'rte_ring', 'rte_mbuf', 'rte_eal', 'rte_kvargs', 'rte_log', 'rte_telemetry',
            'ssl', 'isal']

    tgts = FILES + control_tgts
    bio = denv.d_library("bio", tgts, install_off="../..", LIBS=libs)
    denv.Install('$PREFIX/lib64/daos_srv', bio)

    # Install spdk binaries
    spdk_bins = ['dpdk-cmdline-gen.py', 'dpdk-hugepages.py', 'dpdk-rss-flows.py', 'iscsi_tgt',
                 'spdk_cli', 'spdk_lspci', 'spdk_nvme_identify', 'spdk_nvme_manage', 'spdk_rpc',
                 'spdk_top', 'spdk_trace_record', 'dpdk-devbind.py', 'dpdk-pmdinfo.py',
                 'dpdk-telemetry.py', 'nvmf_tgt', 'spdk_dd', 'spdk_nvme_discover',
                 'spdk_nvme_lsvmd', 'spdk_nvme_perf', 'spdk_tgt', 'spdk_trace']
    for spdk_bin in spdk_bins:
        denv.Install('$PREFIX/bin', [f'$SPDK_PREFIX/bin/{spdk_bin}'])
    denv.Install('$PREFIX/share/', '$SPDK_PREFIX/share/spdk')


if __name__ == "SCons.Script":
    scons()
